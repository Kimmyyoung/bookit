"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/next-connect";
exports.ids = ["vendor-chunks/next-connect"];
exports.modules = {

/***/ "(rsc)/./node_modules/next-connect/dist/esm/edge.js":
/*!****************************************************!*\
  !*** ./node_modules/next-connect/dist/esm/edge.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EdgeRouter: () => (/* binding */ EdgeRouter),\n/* harmony export */   createEdgeRouter: () => (/* binding */ createEdgeRouter),\n/* harmony export */   getPathname: () => (/* binding */ getPathname)\n/* harmony export */ });\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./router.js */ \"(rsc)/./node_modules/next-connect/dist/esm/router.js\");\n\nclass EdgeRouter {\n    constructor(){\n        this.router = new _router_js__WEBPACK_IMPORTED_MODULE_0__.Router();\n        this.all = this.add.bind(this, \"\");\n        this.get = this.add.bind(this, \"GET\");\n        this.head = this.add.bind(this, \"HEAD\");\n        this.post = this.add.bind(this, \"POST\");\n        this.put = this.add.bind(this, \"PUT\");\n        this.patch = this.add.bind(this, \"PATCH\");\n        this.delete = this.add.bind(this, \"DELETE\");\n    }\n    add(method, route, ...fns) {\n        this.router.add(method, route, ...fns);\n        return this;\n    }\n    use(base, ...fns) {\n        if (typeof base === \"function\" || base instanceof EdgeRouter) {\n            fns.unshift(base);\n            base = \"/\";\n        }\n        this.router.use(base, ...fns.map((fn)=>fn instanceof EdgeRouter ? fn.router : fn));\n        return this;\n    }\n    prepareRequest(req, ctx, findResult) {\n        req.params = {\n            ...findResult.params,\n            ...req.params\n        };\n    }\n    clone() {\n        const r = new EdgeRouter();\n        r.router = this.router.clone();\n        return r;\n    }\n    async run(req, ctx) {\n        const result = this.router.find(req.method, getPathname(req));\n        if (!result.fns.length) return;\n        this.prepareRequest(req, ctx, result);\n        return _router_js__WEBPACK_IMPORTED_MODULE_0__.Router.exec(result.fns, req, ctx);\n    }\n    handler(options = {}) {\n        const onNoMatch = options.onNoMatch || onnomatch;\n        const onError = options.onError || onerror;\n        return async (req, ctx)=>{\n            const result = this.router.find(req.method, getPathname(req));\n            this.prepareRequest(req, ctx, result);\n            try {\n                if (result.fns.length === 0 || result.middleOnly) {\n                    return await onNoMatch(req, ctx);\n                } else {\n                    return await _router_js__WEBPACK_IMPORTED_MODULE_0__.Router.exec(result.fns, req, ctx);\n                }\n            } catch (err) {\n                return onError(err, req, ctx);\n            }\n        };\n    }\n}\nfunction onnomatch(req) {\n    return new Response(req.method !== \"HEAD\" ? `Route ${req.method} ${req.url} not found` : null, {\n        status: 404\n    });\n}\nfunction onerror(err) {\n    console.error(err);\n    return new Response(\"Internal Server Error\", {\n        status: 500\n    });\n}\nfunction getPathname(req) {\n    return (req.nextUrl || new URL(req.url)).pathname;\n}\nfunction createEdgeRouter() {\n    return new EdgeRouter();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC1jb25uZWN0L2Rpc3QvZXNtL2VkZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxQztBQUM5QixNQUFNQztJQUNUQyxhQUFjO1FBQ1YsSUFBSSxDQUFDQyxNQUFNLEdBQUcsSUFBSUgsOENBQU1BO1FBQ3hCLElBQUksQ0FBQ0ksR0FBRyxHQUFHLElBQUksQ0FBQ0MsR0FBRyxDQUFDQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQy9CLElBQUksQ0FBQ0MsR0FBRyxHQUFHLElBQUksQ0FBQ0YsR0FBRyxDQUFDQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQy9CLElBQUksQ0FBQ0UsSUFBSSxHQUFHLElBQUksQ0FBQ0gsR0FBRyxDQUFDQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ2hDLElBQUksQ0FBQ0csSUFBSSxHQUFHLElBQUksQ0FBQ0osR0FBRyxDQUFDQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ2hDLElBQUksQ0FBQ0ksR0FBRyxHQUFHLElBQUksQ0FBQ0wsR0FBRyxDQUFDQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQy9CLElBQUksQ0FBQ0ssS0FBSyxHQUFHLElBQUksQ0FBQ04sR0FBRyxDQUFDQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ2pDLElBQUksQ0FBQ00sTUFBTSxHQUFHLElBQUksQ0FBQ1AsR0FBRyxDQUFDQyxJQUFJLENBQUMsSUFBSSxFQUFFO0lBQ3RDO0lBQ0FELElBQUlRLE1BQU0sRUFBRUMsS0FBSyxFQUFFLEdBQUdDLEdBQUcsRUFBRTtRQUN2QixJQUFJLENBQUNaLE1BQU0sQ0FBQ0UsR0FBRyxDQUFDUSxRQUFRQyxVQUFVQztRQUNsQyxPQUFPLElBQUk7SUFDZjtJQUNBQyxJQUFJQyxJQUFJLEVBQUUsR0FBR0YsR0FBRyxFQUFFO1FBQ2QsSUFBSSxPQUFPRSxTQUFTLGNBQWNBLGdCQUFnQmhCLFlBQVk7WUFDMURjLElBQUlHLE9BQU8sQ0FBQ0Q7WUFDWkEsT0FBTztRQUNYO1FBQ0EsSUFBSSxDQUFDZCxNQUFNLENBQUNhLEdBQUcsQ0FBQ0MsU0FBU0YsSUFBSUksR0FBRyxDQUFDLENBQUNDLEtBQVFBLGNBQWNuQixhQUFhbUIsR0FBR2pCLE1BQU0sR0FBR2lCO1FBQ2pGLE9BQU8sSUFBSTtJQUNmO0lBQ0FDLGVBQWVDLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxVQUFVLEVBQUU7UUFDakNGLElBQUlHLE1BQU0sR0FBRztZQUNULEdBQUdELFdBQVdDLE1BQU07WUFDcEIsR0FBR0gsSUFBSUcsTUFBTTtRQUNqQjtJQUNKO0lBQ0FDLFFBQVE7UUFDSixNQUFNQyxJQUFJLElBQUkxQjtRQUNkMEIsRUFBRXhCLE1BQU0sR0FBRyxJQUFJLENBQUNBLE1BQU0sQ0FBQ3VCLEtBQUs7UUFDNUIsT0FBT0M7SUFDWDtJQUNBLE1BQU1DLElBQUlOLEdBQUcsRUFBRUMsR0FBRyxFQUFFO1FBQ2hCLE1BQU1NLFNBQVMsSUFBSSxDQUFDMUIsTUFBTSxDQUFDMkIsSUFBSSxDQUFDUixJQUFJVCxNQUFNLEVBQUVrQixZQUFZVDtRQUN4RCxJQUFJLENBQUNPLE9BQU9kLEdBQUcsQ0FBQ2lCLE1BQU0sRUFDbEI7UUFDSixJQUFJLENBQUNYLGNBQWMsQ0FBQ0MsS0FBS0MsS0FBS007UUFDOUIsT0FBTzdCLDhDQUFNQSxDQUFDaUMsSUFBSSxDQUFDSixPQUFPZCxHQUFHLEVBQUVPLEtBQUtDO0lBQ3hDO0lBQ0FXLFFBQVFDLFVBQVUsQ0FBQyxDQUFDLEVBQUU7UUFDbEIsTUFBTUMsWUFBWUQsUUFBUUMsU0FBUyxJQUFJQztRQUN2QyxNQUFNQyxVQUFVSCxRQUFRRyxPQUFPLElBQUlDO1FBQ25DLE9BQU8sT0FBT2pCLEtBQUtDO1lBQ2YsTUFBTU0sU0FBUyxJQUFJLENBQUMxQixNQUFNLENBQUMyQixJQUFJLENBQUNSLElBQUlULE1BQU0sRUFBRWtCLFlBQVlUO1lBQ3hELElBQUksQ0FBQ0QsY0FBYyxDQUFDQyxLQUFLQyxLQUFLTTtZQUM5QixJQUFJO2dCQUNBLElBQUlBLE9BQU9kLEdBQUcsQ0FBQ2lCLE1BQU0sS0FBSyxLQUFLSCxPQUFPVyxVQUFVLEVBQUU7b0JBQzlDLE9BQU8sTUFBTUosVUFBVWQsS0FBS0M7Z0JBQ2hDLE9BQ0s7b0JBQ0QsT0FBTyxNQUFNdkIsOENBQU1BLENBQUNpQyxJQUFJLENBQUNKLE9BQU9kLEdBQUcsRUFBRU8sS0FBS0M7Z0JBQzlDO1lBQ0osRUFDQSxPQUFPa0IsS0FBSztnQkFDUixPQUFPSCxRQUFRRyxLQUFLbkIsS0FBS0M7WUFDN0I7UUFDSjtJQUNKO0FBQ0o7QUFDQSxTQUFTYyxVQUFVZixHQUFHO0lBQ2xCLE9BQU8sSUFBSW9CLFNBQVNwQixJQUFJVCxNQUFNLEtBQUssU0FBUyxDQUFDLE1BQU0sRUFBRVMsSUFBSVQsTUFBTSxDQUFDLENBQUMsRUFBRVMsSUFBSXFCLEdBQUcsQ0FBQyxVQUFVLENBQUMsR0FBRyxNQUFNO1FBQUVDLFFBQVE7SUFBSTtBQUNqSDtBQUNBLFNBQVNMLFFBQVFFLEdBQUc7SUFDaEJJLFFBQVFDLEtBQUssQ0FBQ0w7SUFDZCxPQUFPLElBQUlDLFNBQVMseUJBQXlCO1FBQUVFLFFBQVE7SUFBSTtBQUMvRDtBQUNPLFNBQVNiLFlBQVlULEdBQUc7SUFDM0IsT0FBTyxDQUFDQSxJQUFJeUIsT0FBTyxJQUFJLElBQUlDLElBQUkxQixJQUFJcUIsR0FBRyxHQUFHTSxRQUFRO0FBQ3JEO0FBQ08sU0FBU0M7SUFDWixPQUFPLElBQUlqRDtBQUNmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYm9vay1pdC8uL25vZGVfbW9kdWxlcy9uZXh0LWNvbm5lY3QvZGlzdC9lc20vZWRnZS5qcz8xOTFlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJvdXRlciB9IGZyb20gXCIuL3JvdXRlci5qc1wiO1xuZXhwb3J0IGNsYXNzIEVkZ2VSb3V0ZXIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnJvdXRlciA9IG5ldyBSb3V0ZXIoKTtcbiAgICAgICAgdGhpcy5hbGwgPSB0aGlzLmFkZC5iaW5kKHRoaXMsIFwiXCIpO1xuICAgICAgICB0aGlzLmdldCA9IHRoaXMuYWRkLmJpbmQodGhpcywgXCJHRVRcIik7XG4gICAgICAgIHRoaXMuaGVhZCA9IHRoaXMuYWRkLmJpbmQodGhpcywgXCJIRUFEXCIpO1xuICAgICAgICB0aGlzLnBvc3QgPSB0aGlzLmFkZC5iaW5kKHRoaXMsIFwiUE9TVFwiKTtcbiAgICAgICAgdGhpcy5wdXQgPSB0aGlzLmFkZC5iaW5kKHRoaXMsIFwiUFVUXCIpO1xuICAgICAgICB0aGlzLnBhdGNoID0gdGhpcy5hZGQuYmluZCh0aGlzLCBcIlBBVENIXCIpO1xuICAgICAgICB0aGlzLmRlbGV0ZSA9IHRoaXMuYWRkLmJpbmQodGhpcywgXCJERUxFVEVcIik7XG4gICAgfVxuICAgIGFkZChtZXRob2QsIHJvdXRlLCAuLi5mbnMpIHtcbiAgICAgICAgdGhpcy5yb3V0ZXIuYWRkKG1ldGhvZCwgcm91dGUsIC4uLmZucyk7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICB1c2UoYmFzZSwgLi4uZm5zKSB7XG4gICAgICAgIGlmICh0eXBlb2YgYmFzZSA9PT0gXCJmdW5jdGlvblwiIHx8IGJhc2UgaW5zdGFuY2VvZiBFZGdlUm91dGVyKSB7XG4gICAgICAgICAgICBmbnMudW5zaGlmdChiYXNlKTtcbiAgICAgICAgICAgIGJhc2UgPSBcIi9cIjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnJvdXRlci51c2UoYmFzZSwgLi4uZm5zLm1hcCgoZm4pID0+IChmbiBpbnN0YW5jZW9mIEVkZ2VSb3V0ZXIgPyBmbi5yb3V0ZXIgOiBmbikpKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuICAgIHByZXBhcmVSZXF1ZXN0KHJlcSwgY3R4LCBmaW5kUmVzdWx0KSB7XG4gICAgICAgIHJlcS5wYXJhbXMgPSB7XG4gICAgICAgICAgICAuLi5maW5kUmVzdWx0LnBhcmFtcyxcbiAgICAgICAgICAgIC4uLnJlcS5wYXJhbXMsIC8vIG9yaWdpbmFsIHBhcmFtcyB3aWxsIHRha2UgcHJlY2VkZW5jZVxuICAgICAgICB9O1xuICAgIH1cbiAgICBjbG9uZSgpIHtcbiAgICAgICAgY29uc3QgciA9IG5ldyBFZGdlUm91dGVyKCk7XG4gICAgICAgIHIucm91dGVyID0gdGhpcy5yb3V0ZXIuY2xvbmUoKTtcbiAgICAgICAgcmV0dXJuIHI7XG4gICAgfVxuICAgIGFzeW5jIHJ1bihyZXEsIGN0eCkge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLnJvdXRlci5maW5kKHJlcS5tZXRob2QsIGdldFBhdGhuYW1lKHJlcSkpO1xuICAgICAgICBpZiAoIXJlc3VsdC5mbnMubGVuZ3RoKVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB0aGlzLnByZXBhcmVSZXF1ZXN0KHJlcSwgY3R4LCByZXN1bHQpO1xuICAgICAgICByZXR1cm4gUm91dGVyLmV4ZWMocmVzdWx0LmZucywgcmVxLCBjdHgpO1xuICAgIH1cbiAgICBoYW5kbGVyKG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCBvbk5vTWF0Y2ggPSBvcHRpb25zLm9uTm9NYXRjaCB8fCBvbm5vbWF0Y2g7XG4gICAgICAgIGNvbnN0IG9uRXJyb3IgPSBvcHRpb25zLm9uRXJyb3IgfHwgb25lcnJvcjtcbiAgICAgICAgcmV0dXJuIGFzeW5jIChyZXEsIGN0eCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5yb3V0ZXIuZmluZChyZXEubWV0aG9kLCBnZXRQYXRobmFtZShyZXEpKTtcbiAgICAgICAgICAgIHRoaXMucHJlcGFyZVJlcXVlc3QocmVxLCBjdHgsIHJlc3VsdCk7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZm5zLmxlbmd0aCA9PT0gMCB8fCByZXN1bHQubWlkZGxlT25seSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgb25Ob01hdGNoKHJlcSwgY3R4KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBSb3V0ZXIuZXhlYyhyZXN1bHQuZm5zLCByZXEsIGN0eCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIHJldHVybiBvbkVycm9yKGVyciwgcmVxLCBjdHgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbn1cbmZ1bmN0aW9uIG9ubm9tYXRjaChyZXEpIHtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlKHJlcS5tZXRob2QgIT09IFwiSEVBRFwiID8gYFJvdXRlICR7cmVxLm1ldGhvZH0gJHtyZXEudXJsfSBub3QgZm91bmRgIDogbnVsbCwgeyBzdGF0dXM6IDQwNCB9KTtcbn1cbmZ1bmN0aW9uIG9uZXJyb3IoZXJyKSB7XG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2UoXCJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3JcIiwgeyBzdGF0dXM6IDUwMCB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRQYXRobmFtZShyZXEpIHtcbiAgICByZXR1cm4gKHJlcS5uZXh0VXJsIHx8IG5ldyBVUkwocmVxLnVybCkpLnBhdGhuYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVkZ2VSb3V0ZXIoKSB7XG4gICAgcmV0dXJuIG5ldyBFZGdlUm91dGVyKCk7XG59XG4iXSwibmFtZXMiOlsiUm91dGVyIiwiRWRnZVJvdXRlciIsImNvbnN0cnVjdG9yIiwicm91dGVyIiwiYWxsIiwiYWRkIiwiYmluZCIsImdldCIsImhlYWQiLCJwb3N0IiwicHV0IiwicGF0Y2giLCJkZWxldGUiLCJtZXRob2QiLCJyb3V0ZSIsImZucyIsInVzZSIsImJhc2UiLCJ1bnNoaWZ0IiwibWFwIiwiZm4iLCJwcmVwYXJlUmVxdWVzdCIsInJlcSIsImN0eCIsImZpbmRSZXN1bHQiLCJwYXJhbXMiLCJjbG9uZSIsInIiLCJydW4iLCJyZXN1bHQiLCJmaW5kIiwiZ2V0UGF0aG5hbWUiLCJsZW5ndGgiLCJleGVjIiwiaGFuZGxlciIsIm9wdGlvbnMiLCJvbk5vTWF0Y2giLCJvbm5vbWF0Y2giLCJvbkVycm9yIiwib25lcnJvciIsIm1pZGRsZU9ubHkiLCJlcnIiLCJSZXNwb25zZSIsInVybCIsInN0YXR1cyIsImNvbnNvbGUiLCJlcnJvciIsIm5leHRVcmwiLCJVUkwiLCJwYXRobmFtZSIsImNyZWF0ZUVkZ2VSb3V0ZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-connect/dist/esm/edge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/next-connect/dist/esm/router.js":
/*!******************************************************!*\
  !*** ./node_modules/next-connect/dist/esm/router.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Router: () => (/* binding */ Router)\n/* harmony export */ });\n/* harmony import */ var regexparam__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! regexparam */ \"(rsc)/./node_modules/regexparam/dist/index.mjs\");\n/**\n * Agnostic router class\n * Adapted from lukeed/trouter library:\n * https://github.com/lukeed/trouter/blob/master/index.mjs\n */ \nclass Router {\n    constructor(base = \"/\", routes = []){\n        this.base = base;\n        this.routes = routes;\n    }\n    add(method, route, ...fns) {\n        if (typeof route === \"function\") {\n            fns.unshift(route);\n            route = \"\";\n        }\n        if (route === \"\") this.routes.push({\n            matchAll: true,\n            method,\n            fns,\n            isMiddle: false\n        });\n        else {\n            const { keys, pattern } = (0,regexparam__WEBPACK_IMPORTED_MODULE_0__.parse)(route);\n            this.routes.push({\n                keys,\n                pattern,\n                method,\n                fns,\n                isMiddle: false\n            });\n        }\n        return this;\n    }\n    use(base, ...fns) {\n        if (typeof base === \"function\" || base instanceof Router) {\n            fns.unshift(base);\n            base = \"/\";\n        }\n        // mount subrouter\n        fns = fns.map((fn)=>{\n            if (fn instanceof Router) {\n                if (typeof base === \"string\") return fn.clone(base);\n                throw new Error(\"Mounting a router to RegExp base is not supported\");\n            }\n            return fn;\n        });\n        const { keys, pattern } = (0,regexparam__WEBPACK_IMPORTED_MODULE_0__.parse)(base, true);\n        this.routes.push({\n            keys,\n            pattern,\n            method: \"\",\n            fns,\n            isMiddle: true\n        });\n        return this;\n    }\n    clone(base) {\n        return new Router(base, Array.from(this.routes));\n    }\n    static async exec(fns, ...args) {\n        let i = 0;\n        const next = ()=>fns[++i](...args, next);\n        return fns[i](...args, next);\n    }\n    find(method, pathname) {\n        let middleOnly = true;\n        const fns = [];\n        const params = {};\n        const isHead = method === \"HEAD\";\n        for (const route of this.routes){\n            if (route.method !== method && // matches any method\n            route.method !== \"\" && // The HEAD method requests that the target resource transfer a representation of its state, as for a GET request...\n            !(isHead && route.method === \"GET\")) {\n                continue;\n            }\n            let matched = false;\n            if (\"matchAll\" in route) {\n                matched = true;\n            } else {\n                if (route.keys === false) {\n                    // routes.key is RegExp: https://github.com/lukeed/regexparam/blob/master/src/index.js#L2\n                    const matches = route.pattern.exec(pathname);\n                    if (matches === null) continue;\n                    if (matches.groups !== void 0) for(const k in matches.groups)params[k] = matches.groups[k];\n                    matched = true;\n                } else if (route.keys.length > 0) {\n                    const matches = route.pattern.exec(pathname);\n                    if (matches === null) continue;\n                    for(let j = 0; j < route.keys.length;)params[route.keys[j]] = matches[++j];\n                    matched = true;\n                } else if (route.pattern.test(pathname)) {\n                    matched = true;\n                } // else not a match\n            }\n            if (matched) {\n                fns.push(...route.fns.map((fn)=>{\n                    if (fn instanceof Router) {\n                        const base = fn.base;\n                        let stripPathname = pathname.substring(base.length);\n                        // fix stripped pathname, not sure why this happens\n                        if (stripPathname[0] != \"/\") stripPathname = `/${stripPathname}`;\n                        const result = fn.find(method, stripPathname);\n                        if (!result.middleOnly) middleOnly = false;\n                        // merge params\n                        Object.assign(params, result.params);\n                        return result.fns;\n                    }\n                    return fn;\n                }).flat());\n                if (!route.isMiddle) middleOnly = false;\n            }\n        }\n        return {\n            fns,\n            params,\n            middleOnly\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next-connect/dist/esm/router.js\n");

/***/ })

};
;